name: Build and Deploy Portfolio

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This is important for push permissions
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for proper Git operations
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Generate short SHA
      id: sha
      run: echo "SHORT_SHA=$(echo $GITHUB_SHA | head -c 7)" >> $GITHUB_ENV
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          kratagyanamdevv/portfolio:latest
          kratagyanamdevv/portfolio:${{ env.SHORT_SHA }}
        cache-from: type=registry,ref=kratagyanamdevv/portfolio:latest
        cache-to: type=inline
    
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "github-actions@github.com"
    
    - name: Update deployment file
      run: |
        # Update the image tag in the deployment file
        sed -i "s|kratagyanamdevv/portfolio:.*|kratagyanamdevv/portfolio:${{ env.SHORT_SHA }}|g" k8s/deployment.yaml
    
    - name: Commit and push changes with proper synchronization
      run: |
        # Fetch the latest changes from remote
        git fetch origin main
        
        # Check if there are remote changes not in our local copy
        if git rev-list HEAD..origin/main --quiet; then
          echo "Remote has changes we need to incorporate"
          
          # Save our changes to a temporary file
          cp k8s/deployment.yaml /tmp/deployment.yaml
          
          # Reset to match remote state
          git reset --hard origin/main
          
          # Reapply our changes
          cp /tmp/deployment.yaml k8s/deployment.yaml
        fi
        
        # Add, commit and push
        git add k8s/deployment.yaml
        git commit -m "Update image tag to ${{ env.SHORT_SHA }}"
        git push origin main

  deploy-to-kubernetes:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up kubeconfig
      uses: azure/k8s-set-context@v3
      with:
        kubeconfig: ${{ secrets.KUBECONFIG }}
    
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/
        kubectl rollout restart deployment portfolio
        kubectl rollout status deployment portfolio
